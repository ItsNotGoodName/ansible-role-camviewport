# vim:ft=yaml.ansible
---
- name: Create user
  ansible.builtin.user:
    name: "{{ camviewport_user }}"
    groups: "{{ camviewport_groups }}"
    append: true
  become: true
  tags: camviewport

- name: Install packages
  ansible.builtin.apt:
    name: "{{ camviewport_packages }}"
    state: present
  become: true
  tags: camviewport

- name: Install
  ansible.builtin.import_tasks: install.yml

- name: Copy config
  ansible.builtin.copy:
    content: "{{ camviewport_config }}"
    dest: "{{ camviewport_home }}/camviewport.ini"
    owner: "{{ camviewport_user }}"
    group: "{{ camviewport_group }}"
    mode: "0600"
  become: true
  notify: restart camviewport
  tags: camviewport
  when: camviewport_config is defined

- name: Copy config [extra]
  ansible.builtin.copy:
    content: "{{ item.config }}"
    label: "{{ index }}"
    dest: "{{ camviewport_home }}/camviewport.{{ index + 1 }}.ini"
    owner: "{{ camviewport_user }}"
    group: "{{ camviewport_group }}"
    mode: "0600"
  become: true
  notify: restart camviewport
  tags: camviewport
  loop: "{{ camviewport_extra_screens }}"
  loop_control:
    label: "{{ index + 1 }}"
    index_var: index

- name: Copy layout
  ansible.builtin.copy:
    content: "{{ camviewport_layout }}"
    dest: "{{ camviewport_home }}/layout.ini"
    owner: "{{ camviewport_user }}"
    group: "{{ camviewport_group }}"
    mode: "0644"
  become: true
  notify: restart camviewport
  tags: camviewport
  when: camviewport_layout is defined

- name: Copy layout [extra]
  ansible.builtin.copy:
    content: "{{ item.layout }}"
    dest: "{{ camviewport_home }}/layout.{{ index + 1 }}.ini"
    owner: "{{ camviewport_user }}"
    group: "{{ camviewport_group }}"
    mode: "0644"
  become: true
  notify: restart camviewport
  tags: camviewport
  when: item.layout is defined
  loop: "{{ camviewport_extra_screens }}"
  loop_control:
    label: "{{ index + 1 }}"
    index_var: index

- name: Template reload.sh
  ansible.builtin.template:
    src: reload.sh.j2
    dest: "{{ camviewport_home }}/reload.sh"
    owner: "{{ camviewport_user }}"
    group: "{{ camviewport_group }}"
    mode: "0755"
  become: true
  tags: camviewport

- name: Template ~/.xinitrc
  ansible.builtin.template:
    src: xinitrc.j2
    dest: "{{ camviewport_home }}/.xinitrc"
    owner: "{{ camviewport_user }}"
    group: "{{ camviewport_group }}"
    mode: "0644"
  become: true
  notify: restart camviewport
  tags: camviewport

- name: Xorg
  ansible.builtin.import_tasks: xorg.yml

- name: Services
  ansible.builtin.import_tasks: services.yml

- name: Allow startx from SSH
  ansible.builtin.lineinfile:
    path: /etc/X11/Xwrapper.config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: "^allowed_users="
      line: "allowed_users=anybody"
    - regexp: "^needs_root_rights="
      line: "needs_root_rights=yes"
  become: true
  tags: camviewport
